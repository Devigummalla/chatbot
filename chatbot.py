# -*- coding: utf-8 -*-
"""chatbot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bUsx6hPSyGXC0vNHnwXbTmToMJK1ASWY
"""

import nltk
import spacy
import random
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords

# Download necessary resources
nltk.download('punkt')
nltk.download('stopwords')
nltk.download('punkt_tab')
# Load SpaCy NLP model
nlp = spacy.load("en_core_web_sm")

# Sample responses
responses = {
    "greeting": ["Hello! How can I assist you today?", "Hi there! What can I do for you?"],
    "goodbye": ["Goodbye! Have a great day!", "See you soon! Take care!"],
    "default": ["I'm not sure I understand. Can you rephrase that?", "Sorry, I don't have an answer for that."],
    "wish": ["greetings to you"],
    "weather": ["The weather is sunny today!", "It looks like it's going to rain."],
    "name": ["I am a chatbot created to assist you.", "You can call me ChatGPT!"],
}

def preprocess(text):
    tokens = word_tokenize(text.lower())
    tokens = [word for word in tokens if word.isalnum()]
    tokens = [word for word in tokens if (word not in stopwords.words('english') or word=="you")]
    return tokens

def get_intent(text):
    tokens = preprocess(text)
    if any(word in tokens for word in ["hello", "hi", "hey"]):
        return "greeting"
    elif any(word in tokens for word in ["bye", "goodbye", "see you"]):
        return "goodbye"
    elif any(word in tokens for word in ["morning","afternoon","evening","night"]):
        return "wish"
    elif any(word in tokens for word in ["weather"]):
        return "weather"
    elif any(word in tokens for word in ["name","you"]):
        return "name"
    return "default"

def chatbot():
    print("Chatbot: Hello! Type 'bye' to exit.")
    while True:
        user_input = input("You: ")
        intent = get_intent(user_input)
        response = random.choice(responses[intent])
        print(f"Chatbot: {response}")
        if intent == "goodbye":
            break

if __name__ == "__main__":
    chatbot()